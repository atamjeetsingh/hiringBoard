---
openapi: 3.0.2
info:
  title: Job Service (HrNG)
  description: |
    HrNG service that will provide the management of the Job data. The following operations will be provided. Creation of a job, getting the list of jobs, updating a job, deletion of a job, and finding a job.
  termsOfService: https://htng.io/terms
  contact:
    name: Admin
    url: https://hrng.acme.io/contact
    email: admin@hrng.acme.io
  license:
    name: CC Attribution-ShareAlike 4.0 (CC BY-SA 4.0)
    url: https://hrng.acme.io/license
  version: 1.0.0
servers:
  - url: https://virtserver.swaggerhub.com/I-am-student/JobPost/1.0.0
    description: SwaggerHub API Auto Mocking
  - url: https://api.hrng.acme.io/v1
    description: Production server
  - url: https://dev.api.hrng.acme.io/v1
    description: Development server
  - url: https://qa.api.hrng.acme.io/v1
    description: QA server
  - url: https://uat.api.hrng.acme.io/v1
    description: UAT server
  - url: https://stg.api.hrng.acme.io/v1
    description: Staging server
paths:
  /job:
    get:
      tags:
        - job
      summary: Find all jobPosts
      description: Find all jobPosts
      operationId: findJobs
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/jobPost'
    post:
      tags:
        - job
      summary: Create new job
      description: Create new job
      operationId: createJob
      requestBody:
        description: Create a new job
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jobPost'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jobPost'
        "500":
          description: Invalid data supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - job
      summary: Update job post
      description: Update job post
      operationId: updateJobPost
      requestBody:
        description: Update job post
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jobPost'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jobPost'
        "404":
          description: Invalid Job Id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Invalid data supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /job/{jobId}:
    get:
      tags:
        - job
      summary: Find jobPost by ID
      description: Find jobPost by ID
      operationId: findJobById
      parameters:
        - name: jobId
          in: path
          description: ID of job to return
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jobPost'
        "400":
          description: Invalid jobPost ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: jobPost not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - job
      summary: Delete jobPOst by ID
      description: Delete jobPOst by ID
      operationId: deleteJobById
      parameters:
        - name: jobId
          in: path
          description: ID of jobPost to delete
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jobPost'
        "400":
          description: Invalid jobPOst ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: jobPOst not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    jobPost:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        userId:
          type: integer
          format: int64
          example: 10
        positionTitle:
          maxLength: 30
          type: string
          nullable: false
          example: Java Programmer
        jobType:
          maxLength: 30
          type: string
          description: Full Time / Part Time / Contract / Co-op
          nullable: false
          example: Full Time
        salaryRange:
          $ref: '#/components/schemas/jobPost_salaryRange'
        closingDate:
          type: string
          format: date
        requiredQualification:
          type: string
          nullable: false
        jobCity:
          maxItems: 3
          type: array
          items:
            type: string
        description:
          maxLength: 255
          type: string
        howToApply:
          $ref: '#/components/schemas/jobPost_howToApply'
        jobPostStatus:
          type: string
          enum:
            - Draft
            - Active
            - inActive
            - deleted
            - suspended
            - expired
        customeQuestionList:
          type: array
          items:
            $ref: '#/components/schemas/jobPost_customeQuestionList'
    ErrorResponse:
      type: object
      properties:
        errorCode:
          type: integer
          format: int32
          example: 400
        appId:
          type: string
          example: EMS-S2
        dateTime:
          type: string
          example: 2022-11-29T18:34:39.793+00:00
        message:
          type: string
          example: Sample error message.
    jobPost_salaryRange:
      type: object
      properties:
        salaryType:
          type: string
          nullable: false
          enum:
            - Annually
            - monthly
            - Hourly
        salaryMinimum:
          type: string
          nullable: false
        salaryMaximum:
          type: string
        wage:
          type: string
    jobPost_howToApply:
      type: object
      properties:
        applicationMethod:
          type: string
          enum:
            - Easy Apply
            - Apply On Email
            - Apply on company website
        email:
          type: string
        website:
          type: string
    jobPost_customeQuestionList:
      type: object
      properties:
        question:
          type: string
        answereType:
          type: string
          enum:
            - text
            - number
